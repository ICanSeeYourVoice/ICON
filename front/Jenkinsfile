pipeline {
    environment {
        dockerImage = ''
    }

    agent any
    stages {
        stage('Checkout') {
            steps {
                script {
                    // 코드 체크아웃
                    checkout scm
                }
            }
        }

        stage('Prepare Environment') {
            steps {
                script {
                    withCredentials([file(credentialsId: 'env-file', variable: 'ENV_FILE')]) {
                        sh 'rm front/.env'
                        sh 'cp $ENV_FILE front/.env'
                    }
                }
            }
        }

        stage('Build Image') {
            steps {
                script {
                    // Docker 이미지 빌드, .env 파일을 참조하도록 Dockerfile 수정 필요
                    dockerImage = docker.build("frontend", "-f front/Dockerfile ./front")
                }
            }
        }

        stage("Kill existing frontend container") {
            steps {
                script {
                    def existingContainers = sh(script: "docker ps -aq -f name=frontend", returnStdout: true).trim()
                    if (existingContainers) {
                        sh "docker stop $existingContainers"
                        sh "docker rm -f $existingContainers"
                    }
                }
            }
        }

        stage("Run frontend container") {
            steps {
                script {
                    // Docker 컨테이너 실행
                    sh "docker run -d -p 80:80 --name frontend frontend"
                }
            }
        }
    }
}
