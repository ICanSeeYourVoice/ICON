pipeline {
    environment {
        dockerImage = ''
    }

    agent any
    stages {
        stage('Checkout') {
            steps {
                script {
                    // 코드 체크아웃
                    checkout scm
                }
            }
        }

        stage('Prepare Environment') {
            steps {
                script {
                    withCredentials([file(credentialsId: 'env-file-id', variable: 'ENV_FILE')]) {
                        sh 'cp $ENV_FILE .'
                    }
                }
            }
        }

        stage('Build Image') {
            steps {
                script {
                    dockerImage = docker.build("frontend", "-f front/Dockerfile ./front") // Dockerfile 경로 수정
                }
            }
        }

        stage("Kill existing frontend container") {
            steps {
                script {
                    def existingContainers = sh(script: "docker ps -aq -f name=frontend", returnStdout: true).trim()
                    if (existingContainers) {
                        sh "docker stop ${existingContainers}"
                        sh "docker rm -f ${existingContainers}"
                    }
                }
            }
        }

        stage("Run frontend container") {
            steps {
                script {
                    // `.env` 파일을 컨테이너 내부로 복사하고 실행
                    sh "docker run -d -p 80:80 --name frontend"
                }
            }
        }


    }
}
